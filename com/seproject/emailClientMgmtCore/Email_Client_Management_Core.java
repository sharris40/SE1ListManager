package com.seproject.emailClientMgmtCore;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Scanner;

import com.seproject.JavaMail.JavaMail;
import com.seproject.emailDesigner.EmailDesigner;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Email_Client_Management_Core.java
//  @ Date : 11/16/2014
//  @ Author : 
//
//




/** */
public class Email_Client_Management_Core {
	private JavaMail mail;
	/** */
	private List<String> contacts;
	
	/** */
	private List<EmailMessage> emailTemplates;
	
	/** */
	private EmailHandler emailHandler;
	
	/** */
	private int userID;
	static private int eID = 1000;
	/** */
	
	private int getID() { return eID++;}
	/** */
	private EmailDesigner emailDesigner;
	MergeSort merge = new MergeSort();
	
	public Email_Client_Management_Core(){
		contacts = new ArrayList<String>();
		mail = new JavaMail();
		
		emailHandler = new EmailHandler();
	}
	
	
	public EmailMessage getMessage(){
		return emailHandler.getMessage
	}
	public EmailHandler getHandler(){
		return this.emailHandler;
	}
	
	/** */
	public Boolean sendEmail(EmailMessage message) {
		emailHandler.sendEmail(mail, message);
		return true;
	}
	
	public JavaMail getJavaMail(){
		return mail;
	}
	
	/** */
	public Boolean saveAsTemplate(EmailMessage message) {
		message.setEID(eID++);
		for(EmailMessage m : emailTemplates){
			if(m.getID() == message.getID())
				return false;
		}
		
		emailTemplates.add(message);
		return true;
	}
	
	public void AddEmailAddressFromFile(String path)throws IOException{
		 Scanner read;
		 FileInputStream fstream;

		 fstream = new FileInputStream(path);
		 read = new Scanner(fstream);

		 while(read.hasNext()){
			contacts.add(read.next().replace(',', ' ').trim());
		 }
		 
		 read.close();
		 
		contacts = merge.mergeSort(contacts, true);
	
	}
	
	/** */
	public void sortAddressListr(boolean ascending) {
		contacts = merge.mergeSort(contacts, ascending);
		
		for(String s: contacts){
			System.out.println(s);
		}
	}
	
	/** */
	public Boolean mergeEmailLists() {
		return null;
	
	}
	
	/** */
	public boolean AddEmailAddress(List<String> addressList) {
		for(String s : addressList){
			if(s.contains("@") && s.contains("."))
				contacts.add(s);
		}
		
		return true;
	}
	
	public boolean AddEmailAddress(String address){
		if(address.contains("@") && address.contains("."))
			contacts.add(address);
		else 
			return false;
		
		return true;
	}
	
	/** */
	public boolean RemoveEmailAddress(List<String> list) {
		boolean found = false;
		
		for(String i : contacts){	
			if(list.contains(i)){
				contacts.remove(i);
				found = true;
			}
		}
		return found;
	}
	
	public boolean RemoveEmailAddress(String s){
		 for(String i: contacts){
			 if(i == s){
				 contacts.remove(s);
				return true;
			 }
		 }
		 return false;
	}

	public void MergeAddressList(List<String> l) {
		contacts.addAll(l);
	}
}
